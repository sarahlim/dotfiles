" Enable line numbers
set number

" Leader key to space
let mapleader=" "

" Use spaces instead of tabs
set expandtab

" Be smart when using tabs
set smarttab

" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2

" Linebreak on 500 chars
set lbr
set tw=500

set autoindent "Auto indent
set si "Smart indent
set wrap "Wrap lines

" Highlight found search results
set hlsearch

" Autoread when a file is changed externally
set autoread

" Always show the status line
set laststatus=2

" Format the status line
set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c

" Delete trailing whitespace on save
func! DeleteTrailingWS()
  exe "normal mz"
  %s/\s\+$//ge
  exe "normal `z"
endfunc
autocmd BufWrite *.py :call DeleteTrailingWS()
autocmd BufWrite *.js :call DeleteTrailingWS()

" Auto detect filetypes
filetype plugin indent on

" Enable syntax highlighting
syntax enable
set background=light

" Disable scrollbars

set guioptions-=r
set guioptions-=R
set guioptions-=l
set guioptions-=L

" Exit insert mode with kj
inoremap jk <esc>
inoremap kj <esc>

" Stop automatically inserting new comment leaders,
" unless we hit 'o' or 'O' in normal mode.
au FileType * set fo-=r fo-=c fo-=o

" Enable persistent undo across buffers and sessions
try
    set undodir=~/.vim_runtime/temp_dirs/undodir
    set undofile
catch
endtry

" Return to last edit position when opening files
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif

" NERD Commenter
let g:NERDSpaceDelims = 1

" Nerdtree
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp']

nmap <leader>kb :NERDTreeToggle<CR>

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Open new splits to the right and bottom
set splitbelow
set splitright

" Enable syntax highlighting for Flow
let g:javascript_plugin_flow = 1

" Add JSX syntax highlighting to .js files
let g:jx_ext_required = 0

" Use Silver Searcher
let g:ackprg = 'ag --nogroup --nocolor --column'

" Use powerline fonts
let g:airline_powerline_fonts = 1  " Auto populate g:airline_symbols dictionary

execute pathogen#infect()
